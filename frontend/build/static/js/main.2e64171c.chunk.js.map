{"version":3,"sources":["components/TimeSeriesChart.jsx","components/Dashboard.jsx","hooks/useInterval.jsx","components/SettingUnit.jsx","components/SettingPanel.jsx","components/TabFrame.jsx","App.js","reportWebVitals.js","index.js"],"names":["TimeSeriesChart","dataArr","x","map","v","y","data","type","layout","width","height","yaxis","title","ws","client","W3CWebSocket","Dashboard","hostname","window","location","port","urlCommand","useState","running","setRunning","warning","error","setData","setDataArr","Date","now","datetime","setDatetime","useEffect","fetch","method","headers","body","JSON","stringify","then","res","json","console","log","catch","onMessage","message","parse","onmessage","callback","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","newData","newDataArr","push","shift","span","offset","style","margin","defaultChecked","onChange","checked","icon","CloseCircleOutlined","color","ExclamationCircleOutlined","padding","backgroundColor","fontSize","display","toPrecision","itemLayout","dataSource","renderItem","item","Item","toFixed","SettingUnit","defaultName","defaultValue","delta","f","name","value","setValue","CaretUpOutlined","onClick","newValue","parseInt","parseFloat","CaretDownOutlined","SettingPanel","urlSettings","urlSet","satTDefault","setSatTDefault","conTDefault","setConTDefault","optTDefault","setOptTDefault","flowDefault","setFlowDefault","satT","setSatT","conT","setConT","optT","setOptT","flow","setFlow","setAll","settings","TabPane","Tabs","TabFrame","defaultActiveKey","tab","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e64171c.chunk.js","sourcesContent":["import Plot from 'react-plotly.js';\n\n\nexport default function TimeSeriesChart({ dataArr }) {\n\n  const x = dataArr.map(v => v['datetime']);\n  const y = dataArr.map(v => v['concentration']);\n\n  return (\n    <Plot\n      data={[\n        {\n          x: x,\n          y: y,\n        },\n        { type: 'scatter' },\n      ]}\n      layout={{\n        width: 520,\n        height: 400,\n        yaxis: {\n          title: 'Number Concentraion (#/cm3)',\n        },\n      }}\n    />\n  );\n};\n","import React, { useState, useEffect, useRef } from 'react';\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\n\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport Switch from 'antd/lib/switch';\nimport Tag from 'antd/lib/tag';\nimport List from 'antd/lib/list';\n\nimport {\n  CloseCircleOutlined,\n  ExclamationCircleOutlined,\n} from '@ant-design/icons';\n\nimport TimeSeriesChart from './TimeSeriesChart.jsx';\nimport useInterval from '../hooks/useInterval.jsx';\n\n\nconst ws = \"ws://localhost:8765\"\nlet client = new W3CWebSocket(ws);\n\n\nexport default function Dashboard() {\n\n  const hostname = window.location.hostname;\n  const port = window.location.port;\n  const urlCommand = `http://${hostname}:${port}/api/command`;\n\n  const [running, setRunning] = useState(true);\n  const [warning, setWarning] = useState(false);\n  const [error, setError] = useState(false);\n  const [data, setData] = useState();\n  const [dataArr, setDataArr] = useState([]);\n  const [datetime,setDatetime] = useState(Date.now());\n\n  useEffect(() => {\n    const data = running ? 'on' : 'off';\n    fetch(urlCommand, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain',\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(res => res.json())\n      .then(res => console.log('Post res:', res))\n      .catch(console.error);\n  }, [running])\n\n  // client.onopen = () => {\n  //   console.log(\"ws://localhost:8765\");\n  // };\n\n  const onMessage = message => {\n    const data = JSON.parse(message['data'])\n    console.log(data);\n    setData(data);\n    setDatetime(Date.now())\n  };\n\n  client.onmessage = onMessage;\n\n  useInterval(() => {\n    if ((Date.now() - datetime) > 2000) {\n      client = new W3CWebSocket(ws);\n      client.onmessage = onMessage;\n    } else {\n      const datetime = new Date();\n      const newData = {...data};\n      newData['datetime'] = datetime;\n      const newDataArr = [...dataArr];\n      newDataArr.push(newData);\n      while ((Date.parse(datetime) - Date.parse(newDataArr[0]['datetime'])) >= 60 * 60 * 1000) {\n        newDataArr.shift();\n      };\n      setDataArr(newDataArr);\n    };\n  }, 2000);\n\n  const onChangeRunning = checked => {\n    setRunning(checked);\n  };\n\n  return (\n    <Row>\n      <Col span={8} offset={0}>\n\n        <Switch\n          style={{ margin: 5 }}\n          defaultChecked={true}\n          onChange={onChangeRunning}\n        />\n        \n        {\n          !running ? null :\n            error ? \n              <Tag icon={<CloseCircleOutlined />} color=\"error\">\n                ERROR\n              </Tag> :\n              warning ? \n                <Tag icon={<ExclamationCircleOutlined />} color=\"warning\">\n                  WARNING\n                </Tag>\n                : null\n        }\n\n        {\n          !running ? null :\n            !data ? null:\n              <>\n                <h1 style={{ margin:10, padding:10, backgroundColor: \"WhiteSmoke\" }}>\n                  <p style={{ fontSize: 35, display: \"inline\" }}>{data['concentration'].toPrecision(3)}</p>\n                  <span>&nbsp;</span>\n                  <p style={{ fontSize: 20, display: \"inline\" }}>#/cm<sup>3</sup></p>\n                </h1>\n\n                <Row>\n                  <Col span={6} offset={2}>\n                    <List\n                      itemLayout=\"horizontal\"\n                      dataSource={['temp_sat', 'temp_con', 'temp_opt', 'flow']}\n                      renderItem={item => (<List.Item>{item}</List.Item>)}\n                    />\n                  </Col>\n\n                  <Col span={6} offset={2}>\n                    <List\n                      itemLayout=\"horizontal\"\n                      dataSource={[\n                        data['saturator_temperature'].toFixed(2),\n                        data['condensor_temperature'].toFixed(2),\n                        data['optics_temperature'].toFixed(2),\n                        data['sample_flow'].toFixed(2),\n                      ]}\n                      renderItem={item => (<List.Item>{item}</List.Item>)}\n                    />\n                  </Col>\n\n                  <Col span={6} offset={2}>\n                    <List\n                      itemLayout=\"horizontal\"\n                      dataSource={[\n                        <text><sup>o</sup>C</text>,\n                        <text><sup>o</sup>C</text>,\n                        <text><sup>o</sup>C</text>,\n                        <text>ml/min</text>,\n                      ]}\n                      renderItem={item => (<List.Item>{item}</List.Item>)}\n                    />\n                  </Col>\n                </Row>\n              </>            \n        }\n\n\n      </Col>\n      <Col span={11} offset={0}>\n        {\n          !running ? \n            <h2 style={{color: \"steelblue\"}}>\n              mini_CPC by University of Helsinki\n            </h2>\n            :\n            <TimeSeriesChart dataArr={dataArr}/>\n        }\n      </Col>\n    </Row>\n  );\n};\n","import { useEffect, useRef } from 'react';\n\n\n// custom Hook\nexport default function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n  // Set up the interval.\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      let id = setInterval(tick, delay);\n      return () => clearInterval(id);\n    }\n  }, [delay]);\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Button from 'antd/lib/button';\nimport Tag from 'antd/lib/tag';\nimport {\n  CaretUpOutlined,\n  CaretDownOutlined\n} from '@ant-design/icons';\n\n\nexport default function SettingUnit({\n  defaultName,\n  defaultValue,\n  delta,\n  onChange = f => f,\n}) {\n  const [name, setName] = useState(defaultName)\n  const [value, setValue] = useState(defaultValue)\n\n  useEffect(() => {\n    setValue(defaultValue);\n  }, [defaultValue])\n\n  useEffect(() => {\n    onChange(value);\n  }, [value])\n\n  const increase = () => {\n    if (delta >= 1) {\n      const newValue = parseInt(value) + parseInt(delta);\n      setValue(newValue);\n    } else {\n      const newValue = parseFloat(value) + parseFloat(delta);\n      setValue(parseFloat(newValue.toFixed(2)));\n    };\n  };\n\n  const decrease = () => {\n    if (delta >= 1) {\n      const newValue = parseInt(value) - parseInt(delta);\n      setValue(newValue);\n    } else {\n      const newValue = parseFloat(value) - parseFloat(delta);\n      setValue(parseFloat(newValue.toFixed(2)));\n    };\n  };\n\n  return (\n    <div style={{ width: 75, height: 200 }}>\n      <Tag style={{ width: 75, height: 40 }}>{name}</Tag>\n      <Button\n        style={{ width: 75, height: 40 }}\n        icon={<CaretUpOutlined />}\n        onClick={increase}\n      />\n      <Tag style={{ width: 75, height: 40 }}>{value}</Tag>\n      <Button\n        style={{ width: 75, height: 40 }}\n        icon={<CaretDownOutlined />}\n        onClick={decrease}\n      />\n    </div>\n  )\n};\n","import React, { useState, useEffect } from 'react';\n\nimport Row from 'antd/lib/row';\nimport Col from 'antd/lib/col';\nimport Button from 'antd/lib/button'\n\nimport SettingUnit from './SettingUnit.jsx';\n\n\nexport default function SettingPanel() {\n  \n  const hostname = window.location.hostname;\n  const port = window.location.port;\n  const urlSettings = `http://${hostname}:${port}/api/settings`;\n  const urlSet = `http://${hostname}:${port}/api/set`;\n\n  const [satTDefault, setSatTDefault] = useState();\n  const [conTDefault, setConTDefault] = useState();\n  const [optTDefault, setOptTDefault] = useState();\n  const [flowDefault, setFlowDefault] = useState();\n  const [satT, setSatT] = useState();\n  const [conT, setConT] = useState();\n  const [optT, setOptT] = useState();\n  const [flow, setFlow] = useState();\n\n  const setAll = settings => {\n    setSatTDefault(settings['saturator_temperature']);\n    setConTDefault(settings['condensor_temperature']);\n    setOptTDefault(settings['optics_temperature']);\n    setFlowDefault(settings['sample_flow']);\n    return settings;\n  };\n\n  useEffect( () => {\n    fetch(urlSettings)\n      .then(res => res.json())\n      .then(setAll)\n      .then(console.log)\n      .catch(console.error);\n  }, []);\n\n  const onChangeSat = value => {\n    setSatT(value);\n  };\n\n  const onChangeCon = value => {\n    setConT(value);\n  };\n\n  const onChangeOpt = value => {\n    setOptT(value);\n  };\n\n  const onChangeFlow = value => {\n    setFlow(value);\n  };\n\n  const onSubmit = () => {\n    const data = {\n      'saturator_temperature': satT,\n      'condensor_temperature': conT,\n      'optics_temperature': optT,\n      'sample_flow': flow,\n    };\n    fetch(urlSet, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json, text/plain',\n        'Content-Type': 'application/json; charset=UTF-8',\n      },\n      body: JSON.stringify(data),\n    })\n      .then(res => res.json())\n      .then(res => console.log('Post res:', res))\n      .catch(console.error);\n  };\n\n  return (\n    <>\n      <Row>\n        <Col>\n          <SettingUnit\n            defaultName={'Sat_T'}\n            defaultValue={satTDefault ? satTDefault : 50}\n            delta={1}\n            onChange={onChangeSat}\n          />\n        </Col>\n        <Col>\n          <SettingUnit\n            defaultName={'Con_T'}\n            defaultValue={conTDefault ? conTDefault : 20}\n            delta={1}\n            onChange={onChangeCon}\n          />\n        </Col>\n        <Col>\n          <SettingUnit\n            defaultName={'Opt_T'}\n            defaultValue={optTDefault ? optTDefault : 50}\n            delta={1}\n            onChange={onChangeOpt}\n          />\n        </Col>\n        <Col>\n          <SettingUnit\n            defaultName={'flow'}\n            defaultValue={flowDefault ? flowDefault : 0.1}\n            delta={0.01}\n            onChange={onChangeFlow}\n          />\n        </Col>\n      </Row>\n      <Row>\n        <Button onClick={onSubmit}>Confirm</Button>\n      </Row>\n    </>\n  )\n};\n","import React, { useState } from 'react';\n\nimport Tabs from 'antd/lib/tabs';\n\nimport Dashboard from './Dashboard.jsx';\nimport SettingPanel from './SettingPanel.jsx';\n\n\nconst { TabPane } = Tabs;\n\n\nexport default function TabFrame() {\n\n  return (\n    <Tabs type=\"card\" defaultActiveKey=\"1\">\n      <TabPane tab=\"Dashboard\" key=\"1\">\n        <Dashboard />\n      </TabPane>\n\n      <TabPane tab=\"Setting\" key=\"2\">\n        <SettingPanel />\n      </TabPane>\n\n      <TabPane tab=\"Data\" key=\"3\">\n        3\n      </TabPane>\n    </Tabs>\n  );\n};\n","import './App.css';\nimport 'antd/dist/antd.css'\n\nimport TabFrame from './components/TabFrame.jsx';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TabFrame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}